name: Dev Releases

on:
  push:
    branches:
      - dev

env:
  LANG: en_US.UTF-8
  ENVFILE: .env.dev
  # App runtime environment
  API_URL: ${{ secrets.DEV_API_URL }}
  # S3
  FOLDER: react-native-base
  AWS_REGION: us-east-1
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  KEYS_BUCKET: ${{ secrets.AWS_S3_KEYS_BUCKET }}
  BUILDS_BUCKET: ${{ secrets.AWS_S3_BUILDS_BUCKET }}
  # iOS Release
  APPLE_PROFILE: ${{ secrets.APPLE_DEV_PROFILE }}
  APPLE_CERT: ios_distribution.cer
  APPLE_KEY: Certificates.p12
  APPLE_KEY_PASSWORD: ${{ secrets.APPLE_KEY_PASSWORD }}
  FASTLANE_TEAM_ID: ${{ secrets.APPLE_TEAM_ID}}
  FASTLANE_USER: ${{ secrets.FASTLANE_USER }}
  APP_STORE_CONNECT_API_KEY_ID: ${{ secrets.APP_STORE_CONNECT_API_KEY_ID }}
  APP_STORE_CONNECT_API_KEY_ISSUER_ID: ${{ secrets.APP_STORE_CONNECT_API_KEY_ISSUER_ID }}
  APP_STORE_CONNECT_API_KEY_FILE: ${{ secrets.APP_STORE_CONNECT_API_KEY_FILE }}
  # Android Release
  JSON_KEYFILE: api-rootstrap.json
  RELEASE_STORE_FILE: debug.keystore
  RELEASE_STORE_PASSWORD: ${{ secrets.ANDROID_RELEASE_STORE_PASSWORD }}
  RELEASE_KEY_ALIAS: debug
  RELEASE_KEY_PASSWORD: ${{ secrets.ANDROID_RELEASE_KEY_PASSWORD }}
  # Notifications
  SLACK_URL: ${{ secrets.SLACK_URL }}
  SLACK_CHANNEL: '#dev-builds'

jobs:
  ios:
    runs-on: macmini
    timeout-minutes: 45

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      # This needs to match Node version in package.json
      - uses: actions/setup-node@v1
        with:
          node-version: '^14.5.0'

      # Downloads certificate, private key and Firebase file
      - name: Download code signing items
        run: |
          aws s3 cp s3://$KEYS_BUCKET/$FOLDER/ ./ios --recursive
          mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
          mv ./ios/$APPLE_PROFILE ~/Library/MobileDevice/Provisioning\ Profiles/$APPLE_PROFILE

      - name: install Node dependencies
        run: yarn install

      - name: Generate .env file
        run: |
          echo API_URL=$API_URL >> .env.dev

      # Runs build and archives for AdHoc distribution
      # Pushes build to AWS S3
      # Sends Slack notification
      - name: Build with Fastlane
        run: bundle exec fastlane share_develop
        working-directory: ios

  android:
    runs-on: ubuntu-latest
    timeout-minutes: 45

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      # This needs to match Node version in package.json
      - uses: actions/setup-node@v1
        with:
          node-version: '^14.5.0'

      # Downloads certificate, private key and Firebase file
      - name: Download code signing items
        run: |
          aws s3 cp s3://$KEYS_BUCKET/$FOLDER/ ./android --recursive
          mv ./android/$RELEASE_STORE_FILE ./android/app/$RELEASE_STORE_FILE

      - name: install Node dependencies
        run: yarn install

      - name: Generate .env file
        run: |
          echo API_URL=$API_URL >> .env.dev
          echo RELEASE_STORE_FILE=$RELEASE_STORE_FILE >> .env.dev
          echo RELEASE_STORE_PASSWORD=$RELEASE_STORE_PASSWORD >> .env.dev
          echo RELEASE_KEY_ALIAS=$RELEASE_KEY_ALIAS >> .env.dev
          echo RELEASE_KEY_PASSWORD=$RELEASE_KEY_PASSWORD >> .env.dev

      - name: install gem dependencies
        run: bundle update
        working-directory: android
      # Cleans workspace
      # Runs build with Gradle
      # Submits build to Play Store
      # Sends Slack notification
      - name: Build with Fastlane
        run: bundle exec fastlane release_develop
        working-directory: android
